
#+BEGIN_SRC sh :results output :exports both
make run CLASS=HashSet ARGS="maxword 10 ../data/tale.txt"
#+END_SRC

#+RESULTS:
: youthfulness

#+BEGIN_SRC sh :results output :exports both
make run CLASS=HashSet ARGS="maxword 10 ../data/tale.txt stat"
#+END_SRC sh :results output :exports both

#+RESULTS:
#+begin_example
youthfulness
size: 2257
buckets: 557
min bucket size: 0
max bucket size: 12
avg bucket size: 4
empty buckets: 10
    x
   xx
   xx
   xxx
  xxxx
  xxxxx
  xxxxx
  xxxxx
 xxxxxx
 xxxxxxx
 xxxxxxx
xxxxxxxxx
xxxxxxxxxxxxx
#+end_example

#+BEGIN_SRC sh :results output :exports both
make run CLASS=HashSet ARGS="stat ../data/tale.txt"
#+END_SRC

#+RESULTS:
#+begin_example
size: 10674
buckets: 2237
min bucket size: 0
max bucket size: 14
avg bucket size: 4
empty buckets: 24
    x
    x
    xx
   xxxx
   xxxx
   xxxx
   xxxx
   xxxx
  xxxxxx
  xxxxxx
  xxxxxxx
 xxxxxxxx
 xxxxxxxxx
 xxxxxxxxxx
xxxxxxxxxxxxxxx
#+end_example

#+BEGIN_SRC sh :results output :exports both
make run CLASS=HashSet ARGS="test 1000 stat"
#+END_SRC

#+RESULTS:
#+begin_example
Adding 1000 integers...
size: 1000
buckets: 137
min bucket size: 7
max bucket size: 8
avg bucket size: 7
empty buckets: 0
       x
       x
       x
       x
       x
       xx
       xx
       xx
xxxxxxxxx
Deleting 1000 integers...
size: 0
buckets: 31
min bucket size: 0
max bucket size: 0
avg bucket size: 0
empty buckets: 31

#+end_example

#+NAME: hashset
#+BEGIN_SRC sh :results output :exports both
make run CLASS=HashSet ARGS="dot ../data/tinyTale.txt"
#+END_SRC

#+RESULTS: hashset
#+begin_example
digraph {
  rankdir=LR
  node [shape=record]
  array [label="<0> 0|<1> 1|<2> 2|<3> 3|<4> 4|<5> 5|<6> 6|<7> 7|<8> 8|<9> 9|<10> 10|<11> 11|<12> 12|<13> 13|<14> 14|<15> 15|<16> 16|<17> 17|<18> 18|<19> 19|<20> 20|<21> 21|<22> 22|<23> 23|<24> 24|<25> 25|<26> 26|<27> 27|<28> 28|<29> 29|<30> 30"]
  array:7 -> node7_0:head
  node7_0 [label="{<head> belief | <next>}"]
  array:8 -> node8_0:head
  node8_0 [label="{<head> hope | <next>}"]
  node8_0:next -> node8_1:head
  node8_1 [label="{<head> spring | <next>}"]
  node8_1:next -> node8_2:head
  node8_2 [label="{<head> age | <next>}"]
  node8_2:next -> node8_3:head
  node8_3 [label="{<head> the | <next>}"]
  array:9 -> node9_0:head
  node9_0 [label="{<head> of | <next>}"]
  array:11 -> node11_0:head
  node11_0 [label="{<head> epoch | <next>}"]
  array:13 -> node13_0:head
  node13_0 [label="{<head> darkness | <next>}"]
  array:14 -> node14_0:head
  node14_0 [label="{<head> wisdom | <next>}"]
  array:15 -> node15_0:head
  node15_0 [label="{<head> season | <next>}"]
  array:19 -> node19_0:head
  node19_0 [label="{<head> winter | <next>}"]
  node19_0:next -> node19_1:head
  node19_1 [label="{<head> incredulity | <next>}"]
  array:22 -> node22_0:head
  node22_0 [label="{<head> times | <next>}"]
  node22_0:next -> node22_1:head
  node22_1 [label="{<head> was | <next>}"]
  array:23 -> node23_0:head
  node23_0 [label="{<head> light | <next>}"]
  node23_0:next -> node23_1:head
  node23_1 [label="{<head> worst | <next>}"]
  node23_1:next -> node23_2:head
  node23_2 [label="{<head> best | <next>}"]
  node23_2:next -> node23_3:head
  node23_3 [label="{<head> it | <next>}"]
  array:29 -> node29_0:head
  node29_0 [label="{<head> foolishness | <next>}"]
  array:30 -> node30_0:head
  node30_0 [label="{<head> despair | <next>}"]
}

#+end_example

y#+BEGIN_SRC dot :file hashset.png :var src=hashset :exports results
$src
#+END_SRC

#+RESULTS:
[[file:hashset.png]]
